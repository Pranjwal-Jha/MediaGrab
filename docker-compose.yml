version: '3.8'

services:
  # Python FastAPI Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: mediagrab-backend
    ports:
      - "8000:8000"
    volumes:
      - ./downloads:/app/downloads
      - ./logs:/app/logs
    environment:
      - PYTHONUNBUFFERED=1
      - HOST=0.0.0.0
      - PORT=8000
      - DOWNLOADS_DIR=/app/downloads
    networks:
      - mediagrab-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: mediagrab-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8000
      - NODE_ENV=production
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - mediagrab-network
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: mediagrab-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - mediagrab-network
    restart: unless-stopped

  # Redis for caching and session management (Optional)
  redis:
    image: redis:7-alpine
    container_name: mediagrab-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - mediagrab-network
    restart: unless-stopped
    command: redis-server --appendonly yes

networks:
  mediagrab-network:
    driver: bridge

volumes:
  redis_data:
    driver: local
